{"version":3,"sources":["Quote.js","App.js","index.js"],"names":["Quote","author","currentAnimation","getQuote","quote","quoteLink","twitterLink","id","className","onClick","debounce","href","rel","target","aria-hidden","App","state","animationsCounter","animationsArray","error","timer","console","log","thisState","setState","length","$","ajax","dataType","data","format","lang","method","jsonp","then","quoteAuthor","quoteText","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAsEiBA,EAnEL,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,OAAQC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAChE,OACI,sBACIC,GAAG,YACHC,UAAU,YAFd,UAII,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,4CAAf,SACI,oBACID,GAAG,oBACHC,UAAU,sBAFd,sCANZ,IAcI,sBAAKA,UAAU,wBAAf,UACI,sBACID,GAAG,gBACHC,UAAU,4CAFd,UAII,mBACID,GAAG,QACHC,UAAS,4BAAuBN,GAFpC,SAIKE,IAEL,oBACIG,GAAG,SACHC,UAAS,4BAAuBN,GAFpC,cAIMD,KAEN,sBAAKO,UAAU,cAAf,UACI,wBACID,GAAG,YACHC,UAAU,MACVC,QAASC,KAAS,kBAAMP,MAAW,KAHvC,uBAOA,mBACII,GAAG,eACHC,UAAU,MACVG,KAAMN,EACNO,IAAI,aACJC,OAAO,SALX,oBASA,mBACIN,GAAG,cACHC,UAAU,MACVG,KAAML,EACNM,IAAI,aACJC,OAAO,SALX,SAOI,mBAAGL,UAAU,gBAAgBM,cAAY,iBAzCzD,OAdJ,QCuEOC,E,4MAnEXC,MAAQ,CACJC,kBAAmB,EACnBC,gBAAiB,CAAC,kBAClB,mBACA,kBACA,oBACAhB,iBAAkB,GAClBiB,OAAO,EACPf,MAAO,GACPC,UAAW,GACXe,MAAO,KACPd,YAAa,I,EAOjBH,SAAW,WACTkB,QAAQC,IAAI,aACV,IAAML,EAAoB,EAAKD,MAAMC,kBAC/BM,EAAS,eACf,EAAKC,SAAS,CACZtB,iBAAkB,EAAKc,MAAME,gBAAgB,EAAKF,MAAMC,qBAG1DA,IAAsB,EAAKD,MAAME,gBAAgBO,OAAS,EACxD,EAAKD,SAAS,CACZP,kBAAmB,IAErB,EAAKO,SAAS,CACZP,kBAAmB,EAAKD,MAAMC,kBAAoB,IAGtDS,IAAEC,KAAK,sCAAuC,CAC1CC,SAAU,QACVC,KAAM,CAACC,OAAQ,QAAQC,KAAM,KAAMC,OAAQ,YAC3CC,MAAO,UACRC,MAAK,SAACL,GACH,IAAM5B,EAA8B,KAArB4B,EAAKM,YAAqBN,EAAKM,YAAc,UACtD/B,EAAQyB,EAAKO,UACnBb,EAAUC,SAAS,CACfvB,SACAG,MAAOA,EACPC,UAAWwB,EAAKxB,UAChBC,YAAY,sEAAD,OAAwEF,EAAxE,YAAiFH,QAEjG,WACK,EAAKuB,SAAS,CACZL,OAAO,Q,uDAnCvB,WACIkB,KAAKlC,a,oBAuCT,WACI,OAAO,cAAC,EAAD,CACGF,OAAQoC,KAAKrB,MAAMf,OACnBC,iBAAkBmC,KAAKrB,MAAMd,iBAC7BQ,SAAU2B,KAAK3B,SACfP,SAAUkC,KAAKlC,SACfC,MAAOiC,KAAKrB,MAAMZ,MAClBC,UAAWgC,KAAKrB,MAAMX,UACtBC,YAAa+B,KAAKrB,MAAMV,kB,GA/DxBgC,IAAMC,WCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0bd5c71e.chunk.js","sourcesContent":["import React from 'react';\nimport debounce from 'lodash.debounce';\n\nlet Quote = ({author, currentAnimation, getQuote, quote, quoteLink, twitterLink}) => {\n    return (\n        <div \n            id=\"quote-box\" \n            className=\"container\"\n        >          \n            <div className=\"row quote-title-row\">   \n                <div className=\"col-md-6 offset-md-3 col-sm-8 offset-sm-2\">\n                    <h1 \n                        id=\"quote-topic-title\" \n                        className=\"text-center mx-auto\"\n                    >\n                        Inspirational Quotes\n                    </h1>\n                </div>     \n            </div> {/* /row */}\n            <div className=\"row quote-display-row\">    \n                <div \n                    id=\"quote-display\" \n                    className=\"col-md-6 offset-md-3 col-sm-8 offset-sm-2\"\n                >       \n                    <p \n                        id=\"quote\" \n                        className={`animate__animated ${currentAnimation}`}\n                    >\n                        {quote}\n                    </p>\n                    <p \n                        id=\"author\" \n                        className={`animate__animated ${currentAnimation}`}\n                    >\n                        -{author}\n                    </p>                      \n                    <div className=\"text-center\">\n                        <button \n                            id=\"new-quote\" \n                            className=\"btn\" \n                            onClick={debounce(() => getQuote(),300)}\n                        > \n                            New Quote \n                        </button>\n                        <a \n                            id=\"quote-source\" \n                            className=\"btn\" \n                            href={quoteLink} \n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        > \n                            Source \n                        </a>\n                        <a \n                            id=\"tweet-quote\" \n                            className=\"btn\" \n                            href={twitterLink} \n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        > \n                            <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                        </a>  \n                    </div>\n                </div> {/* /column */}                  \n            </div> {/* /row */}\n        </div>\n    );\n\n  }\n\n  export default Quote;","// Modules\nimport $ from 'jquery';\nimport 'animate.css';\nimport React from 'react';\n// Assets/Components\nimport './main.scss';\nimport Quote from './Quote';\n\nclass App extends React.Component {\n    state = {\n        animationsCounter: 0,\n        animationsArray: [\"animate__fadeIn\",\n        \"animate__flipInX\",\n        \"animate__zoomIn\",\n        \"animate__flipInY\"],\n        currentAnimation: '',\n        error: false,\n        quote: '',\n        quoteLink: '',\n        timer: null,\n        twitterLink: ''\n    }\n\n    componentDidMount() {\n        this.getQuote();\n    }\n\n    getQuote = () => { \n      console.log('get quote') \n        const animationsCounter = this.state.animationsCounter;\n        const thisState = this;\n        this.setState({\n          currentAnimation: this.state.animationsArray[this.state.animationsCounter]\n        });\n        // when animationsCounter reaches end of animationsArray set it to -1 so when it is incremented again in getQuote function, it will be at 0 (beginning of animationsArray)    \n        animationsCounter === this.state.animationsArray.length - 1 \n        ? this.setState({\n            animationsCounter: 0\n          })\n        : this.setState({\n            animationsCounter: this.state.animationsCounter + 1\n          });\n        // Make API request to Forismatic to retrive quote and author\n        $.ajax('https://api.forismatic.com/api/1.0/', {\n            dataType: \"jsonp\",\n            data: {format: \"jsonp\",lang: \"en\", method: \"getQuote\"},\n            jsonp: \"jsonp\",\n        }).then((data) => {\n              const author = data.quoteAuthor !== '' ? data.quoteAuthor : 'Unknown';\n              const quote = data.quoteText;         \n              thisState.setState({\n                  author,\n                  quote: quote,\n                  quoteLink: data.quoteLink,\n                  twitterLink: `https://twitter.com/intent/tweet?hashtags=inspirationalQuotes&text=${quote}-${author}`\n              });\n          }, () => {\n                  this.setState({\n                    error: true\n                  });            \n        });               \n    }   \n   \n    render() {\n        return <Quote \n                  author={this.state.author} \n                  currentAnimation={this.state.currentAnimation} \n                  debounce={this.debounce}\n                  getQuote={this.getQuote} \n                  quote={this.state.quote} \n                  quoteLink={this.state.quoteLink} \n                  twitterLink={this.state.twitterLink} \n                />            \n    } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}